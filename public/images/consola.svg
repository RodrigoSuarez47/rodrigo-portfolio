<svg xmlns="http://www.w3.org/2000/svg" width="1200" height="630" viewBox="0 0 1200 630" role="img" aria-label="Rodrigo Suarez Full Stack Developer Ultra Advanced">
  <defs>
    <!-- Animated gradient background -->
    <linearGradient id="bgGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" stop-color="#071024"/>
      <stop offset="50%" stop-color="#0f172a">
        <animate attributeName="stop-color" dur="12s" values="#0f172a;#0b1220;#1e293b;#0f172a" repeatCount="indefinite"/>
      </stop>
      <stop offset="100%" stop-color="#071024"/>
    </linearGradient>

    <!-- subtle pattern of code symbols -->
    <pattern id="codePattern" width="120" height="120" patternUnits="userSpaceOnUse">
      <rect width="120" height="120" fill="transparent"/>
      <text x="6" y="28" font-family="monospace" font-size="28" fill="rgba(255,255,255,0.03)">&lt;/&gt;</text>
      <text x="60" y="68" font-family="monospace" font-size="22" fill="rgba(255,255,255,0.03)">{ }</text>
      <text x="12" y="100" font-family="monospace" font-size="16" fill="rgba(255,255,255,0.02)">; </text>
    </pattern>

    <!-- subtle vignette -->
    <radialGradient id="vignette" cx="50%" cy="40%" r="80%">
      <stop offset="0%" stop-color="rgba(255,255,255,0)"/>
      <stop offset="100%" stop-color="rgba(0,0,0,0.25)"/>
    </radialGradient>

    <!-- console clipping -->
    <clipPath id="consoleClip">
      <rect x="100" y="90" rx="18" ry="18" width="1000" height="450"/>
    </clipPath>
  </defs>

  <!-- Background layers -->
  <rect width="1200" height="630" fill="url(#bgGradient)"/>
  <rect width="1200" height="630" fill="url(#codePattern)" opacity="0.35"/>
  <rect width="1200" height="630" fill="url(#vignette)"/>

  <!-- Main console -->
  <g clip-path="url(#consoleClip)">
    <rect x="100" y="90" width="1000" height="450" rx="18" fill="rgba(255,255,255,0.03)" stroke="rgba(255,255,255,0.06)"/>
    <rect x="100" y="90" width="1000" height="450" rx="18" fill="url(#bgGradient)" opacity="0.06"/>
    <text x="130" y="140" font-family="monospace" font-size="20" fill="rgba(255,255,255,0.08)">&lt;header /&gt;</text>

    <!-- animated terminal code lines -->
    <text id="line1" x="120" y="200" font-family="monospace" font-size="18" fill="#00a6e2">&gt; console.log("Hello");</text>
    <text id="line2" x="120" y="230" font-family="monospace" font-size="18" fill="#34d399">&gt; const x = 42;</text>
    <text id="line3" x="120" y="260" font-family="monospace" font-size="18" fill="#facc15">&gt; let msg = "Portfolio";</text>
    <text id="line4" x="120" y="290" font-family="monospace" font-size="18" fill="#60a5fa">&gt; &lt;/div&gt;</text>

    <!-- blinking cursor at end of last line -->
    <rect id="cursor" x="460" y="270" width="8" height="18" fill="#00a6e2">
      <animate attributeName="opacity" values="0;1;0" dur="1s" repeatCount="indefinite"/>
    </rect>

    <!-- floating random symbols (Matrix-style) -->
    <g id="floatingSymbols">
      <text x="0" y="0" font-family="monospace" font-size="16" fill="#34d399" opacity="0.7">&#123;</text>
      <text x="40" y="20" font-family="monospace" font-size="16" fill="#00a6e2" opacity="0.6">&#60;</text>
      <text x="80" y="40" font-family="monospace" font-size="16" fill="#facc15" opacity="0.5">&#125;</text>
      <text x="120" y="60" font-family="monospace" font-size="16" fill="#60a5fa" opacity="0.5">&#47;</text>
    </g>

    <!-- floating particles -->
    <g id="particles">
      <!-- multiple small circles -->
      <circle cx="50" cy="50" r="1.5" fill="#00a6e2"/>
      <circle cx="200" cy="80" r="1.2" fill="#34d399"/>
      <circle cx="400" cy="150" r="1" fill="#facc15"/>
      <circle cx="600" cy="200" r="1.3" fill="#60a5fa"/>
      <circle cx="800" cy="300" r="1.5" fill="#00a6e2"/>
      <circle cx="1000" cy="400" r="1.2" fill="#34d399"/>
      <circle cx="300" cy="500" r="1.1" fill="#facc15"/>
    </g>

    <!-- big name -->
    <text x="1200" y="370" text-anchor="end" font-family="Inter, system-ui" font-weight="700" font-size="64" fill="#ffffff" transform="translate(-140,0)">
      Rodrigo Suarez
    </text>

    <!-- role -->
    <text x="1200" y="440" text-anchor="end" font-family="Inter, system-ui" font-weight="600" font-size="32" fill="#00a6e2" transform="translate(-140,0)">
      Full Stack Developer
    </text>

    <!-- short description -->
    <text x="140" y="500" font-family="Inter, system-ui" font-size="20" fill="#cbd5e1" opacity="0.95">
      Analista en Tecnologías de la Información · Universidad ORT Uruguay
    </text>
  </g>

  <!-- animated corner dots -->
  <g transform="translate(980,120)" opacity="0.95">
    <circle cx="0" cy="0" r="6" fill="#34d399">
      <animate attributeName="r" dur="1.6s" values="6;10;6" repeatCount="indefinite"/>
      <animate attributeName="opacity" dur="1.6s" values="1;0.45;1" repeatCount="indefinite"/>
    </circle>
    <circle cx="28" cy="0" r="6" fill="#00a6e2">
      <animate attributeName="r" dur="1.6s" values="6;10;6" begin="0.2s" repeatCount="indefinite"/>
      <animate attributeName="opacity" dur="1.6s" values="1;0.45;1" begin="0.2s" repeatCount="indefinite"/>
    </circle>
  </g>

  <!-- terminal script -->
  <script type="application/ecmascript"><![CDATA[
    const lines = [
      ["> console.log('Hello');","> const x = 42;","> let msg = 'Portfolio';","> </div>"],
      ["> import React from 'react';","> const app = () => {};","> console.log(app);","> </React>"],
      ["> function demo() {}","> let a = 10;","> console.log(a);","> </demo>"],
      ["> fetch('/api')","> .then(res => res.json())","> .then(data => console.log(data))","> </fetch>"]
    ];
    const lineElements = ["line1","line2","line3","line4"];
    const cursor = document.getElementById("cursor");
    const floatingSymbols = Array.from(document.querySelectorAll("#floatingSymbols text"));
    const particles = Array.from(document.querySelectorAll("#particles circle"));

    const updateLines = () => {
      const l = lines[Math.floor(Math.random()*lines.length)];
      for(let i=0;i<lineElements.length;i++){
        document.getElementById(lineElements[i]).textContent = l[i];
      }
      const lastLine = document.getElementById(lineElements[3]);
      const bbox = lastLine.getBBox();
      cursor.setAttribute("x", bbox.x + bbox.width + 4);
      cursor.setAttribute("y", bbox.y);
    };

    const animateSymbols = () => {
      floatingSymbols.forEach(el=>{
        const newY = Math.random()*450;
        const newX = Math.random()*1000;
        el.setAttribute("x", newX);
        el.setAttribute("y", 90 + newY);
        el.setAttribute("opacity", 0.3 + Math.random()*0.7);
      });
    };

    const animateParticles = () => {
      particles.forEach(el=>{
        const newY = Math.random()*450;
        const newX = Math.random()*1000;
        el.setAttribute("cx", newX);
        el.setAttribute("cy", 90 + newY);
        el.setAttribute("r", 0.8 + Math.random()*2);
      });
    };

    setInterval(updateLines,1800);
    setInterval(animateSymbols,800);
    setInterval(animateParticles,700);
  ]]></script>
</svg>
